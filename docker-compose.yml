services:
  db:
    image: mysql:8.0
    container_name: mysql-db
    command: --default-authentication-plugin=mysql_native_password
    restart: always
    environment:
      MYSQL_ROOT_PASSWORD: ${MYSQL_ROOT_PASSWORD}
    ports:
      - "3306:3306"
    volumes:
      - db_data:/var/lib/mysql
    networks:
      - msvc_network

  msvc-autorizacion:
    build:
      context: .
      dockerfile: msvc-autorizacion/Dockerfile
    container_name: msvc-autorizacion
    restart: always
    ports:
      - "8010:8010"
    environment:
      - SERVER_PORT=8010
      - DB_HOST=db
      - DB_NAME=db_autorizacion
      - DB_USER=${DB_USER}
      - DB_PASS=${DB_PASS}
      - JWT_SECRET_KEY=${JWT_SECRET_KEY}
    depends_on:
      - db
    networks:
      - msvc_network

  msvc-ejemploautorizacion:
    build:
      context: .
      dockerfile: msvc-ejemploautorizacion/Dockerfile
    container_name: msvc-ejemploautorizacion
    restart: always
    ports:
      - "8050:8050"
    environment:
      - SERVER_PORT=8050
      - JWT_SECRET_KEY=${JWT_SECRET_KEY}
    networks:
      - msvc_network

  msvc-admin:
    build:
      context: .
      dockerfile: msvc-admin/Dockerfile
    container_name: msvc-admin
    restart: always
    ports:
      - "8085:8005"
    depends_on:
      - db
    environment:
      SPRING_DATASOURCE_URL: jdbc:mysql://mysql:3306/msvc_admin?createDatabaseIfNotExist=true
      SPRING_DATASOURCE_USERNAME: root
      SPRING_DATASOURCE_PASSWORD:
    networks:
      - msvc_network

volumes:
  db_data:

networks:
  msvc_network: